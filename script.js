// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–Ω–ª–∞–π–Ω —Å—á–µ—Ç—á–∏–∫–∞
function updateOnlineCount() {
    const baseCount = 2847;
    const variation = Math.floor(Math.random() * 20) - 10;
    const newCount = baseCount + variation;
    document.getElementById("onlineCount").textContent = newCount;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
setInterval(updateOnlineCount, 5000);

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–µ—Å—Ç
function updateSpotsLeft() {
    const spotsElement = document.getElementById("spotsLeft");
    if (spotsElement) {
        let currentSpots = parseInt(spotsElement.textContent);
        if (currentSpots > 3) {
            currentSpots--;
            spotsElement.textContent = currentSpots;
            
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –º–∏–≥–∞–Ω–∏—è
            spotsElement.style.color = "#ef4444";
            setTimeout(() => {
                spotsElement.style.color = "inherit";
            }, 500);
        }
    }
}

// –£–º–µ–Ω—å—à–µ–Ω–∏–µ –º–µ—Å—Ç –∫–∞–∂–¥—ã–µ 8 —Å–µ–∫—É–Ω–¥
setInterval(updateSpotsLeft, 8000);

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
function nextStep(stepNumber) {
    // –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
    const currentStep = document.querySelector(".step.active");
    currentStep.classList.remove("active");
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    const nextStepElement = document.getElementById("step" + stepNumber);
    nextStepElement.classList.add("active");
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
    const stepCounter = document.querySelector(".step.active .step-counter");
    if (stepCounter) {
        const totalQuestions = 3; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤
        const currentQuestion = stepNumber - 1; // –®–∞–≥ 2 = –í–æ–ø—Ä–æ—Å 1, –®–∞–≥ 3 = –í–æ–ø—Ä–æ—Å 2, –®–∞–≥ 4 = –í–æ–ø—Ä–æ—Å 3
        if (currentQuestion > 0 && currentQuestion <= totalQuestions) {
            stepCounter.textContent = `–í–æ–ø—Ä–æ—Å ${currentQuestion} –∏–∑ ${totalQuestions}`;
        } else if (stepNumber === 4) { // –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å
            stepCounter.textContent = "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å";
        }
    }

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö
    window.scrollTo({ top: 0, behavior: "smooth" });
    
    // –ï—Å–ª–∏ —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å—á–µ—Ç—á–∏–∫–∞
    if (stepNumber === 5) {
        animateMatchCount();
    }
}

// –í—ã–±–æ—Ä –æ–ø—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
function selectOption(element, nextStepNumber) {
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –æ–ø—Ü–∏–π
    const options = element.parentElement.querySelectorAll(".option-card");
    options.forEach(opt => opt.classList.remove("selected"));
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–ø—Ü–∏—é
    element.classList.add("selected");
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
        nextStep(nextStepNumber);
    }, 400);
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
function animateMatchCount() {
    const targetCount = 47;
    const countElement = document.getElementById("matchCount");
    let currentCount = 0;
    const duration = 2000; // 2 —Å–µ–∫—É–Ω–¥—ã
    const steps = 50;
    const increment = targetCount / steps;
    const stepDuration = duration / steps;
    
    const interval = setInterval(() => {
        currentCount += increment;
        if (currentCount >= targetCount) {
            currentCount = targetCount;
            clearInterval(interval);
        }
        countElement.textContent = Math.floor(currentCount);
    }, stepDuration);
}

// –≠—Ñ—Ñ–µ–∫—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
function observeElements() {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = "1";
                entry.target.style.transform = "translateY(0)";
            }
        });
    }, { threshold: 0.1 });
    
    const elements = document.querySelectorAll(".profile-item, .option-card");
    elements.forEach(el => {
        el.style.opacity = "0";
        el.style.transform = "translateY(20px)";
        el.style.transition = "opacity 0.5s ease, transform 0.5s ease";
        observer.observe(el);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    observeElements();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    createFloatingHearts();
});

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–≤–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫ (–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç)
function createFloatingHearts() {
    const hearts = ["üíï", "üíñ", "üíó", "üíì", "üíù"];
    
    setInterval(() => {
        // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–¥–µ—á–∫–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞ –ø–µ—Ä–≤–æ–º —à–∞–≥–µ
        const step1 = document.getElementById("step1");
        if (step1 && step1.classList.contains("active")) {
            const heart = document.createElement("div");
            heart.textContent = hearts[Math.floor(Math.random() * hearts.length)];
            heart.style.position = "fixed";
            heart.style.left = Math.random() * 100 + "vw";
            heart.style.bottom = "-50px";
            heart.style.fontSize = "20px";
            heart.style.opacity = "0.6";
            heart.style.pointerEvents = "none";
            heart.style.zIndex = "1";
            heart.style.transition = "all 4s ease-in-out";
            
            document.body.appendChild(heart);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≤–≤–µ—Ä—Ö
            setTimeout(() => {
                heart.style.bottom = "110vh";
                heart.style.opacity = "0";
                heart.style.transform = "translateX(" + (Math.random() * 200 - 100) + "px)";
            }, 100);
            
            // –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
            setTimeout(() => {
                heart.remove();
            }, 4100);
        }
    }, 3000);
}

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener("beforeunload", (e) => {
    const step5 = document.getElementById("step5");
    if (!step5.classList.contains("active")) {
        e.preventDefault();
        e.returnValue = "";
        return "";
    }
});

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userActive = true;
let inactivityTimer;

function resetInactivityTimer() {
    userActive = true;
    clearTimeout(inactivityTimer);
    
    inactivityTimer = setTimeout(() => {
        userActive = false;
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        showInactivityReminder();
    }, 30000); // 30 —Å–µ–∫—É–Ω–¥ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
}

function showInactivityReminder() {
    const step1 = document.getElementById("step1");
    if (step1 && step1.classList.contains("active")) {
        // –°–æ–∑–¥–∞–µ–º –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        const reminder = document.createElement("div");
        reminder.style.cssText = `
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(239, 68, 68, 0.95);
            color: white;
            padding: 15px 25px;
            border-radius: 50px;
            font-weight: 600;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            animation: slideUp 0.5s ease;
        `;
        reminder.textContent = "‚è∞ –ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å! –û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏—Ü—ã –∂–¥—É—Ç...";
        
        document.body.appendChild(reminder);
        
        setTimeout(() => {
            reminder.style.animation = "slideDown 0.5s ease";
            setTimeout(() => reminder.remove(), 500);
        }, 3000);
    }
}

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏–π –º—ã—à–∏ –∏ –∫–ª–∏–∫–æ–≤
document.addEventListener("mousemove", resetInactivityTimer);
document.addEventListener("click", resetInactivityTimer);
document.addEventListener("scroll", resetInactivityTimer);
document.addEventListener("keypress", resetInactivityTimer);

// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
resetInactivityTimer();

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS –∞–Ω–∏–º–∞—Ü–∏–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
const style = document.createElement("style");
style.textContent = `
    @keyframes slideUp {
        from {
            bottom: -100px;
            opacity: 0;
        }
        to {
            bottom: 20px;
            opacity: 1;
        }
    }
    
    @keyframes slideDown {
        from {
            bottom: 20px;
            opacity: 1;
        }
        to {
            bottom: -100px;
            opacity: 0;
        }
    }
`;
document.head.appendChild(style);

